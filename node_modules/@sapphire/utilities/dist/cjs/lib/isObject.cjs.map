{"version":3,"sources":["../../../src/lib/isObject.ts"],"names":[],"mappings":";;;;;;AASO,SAAS,QAAA,CAA6D,OAAgB,eAA6C,EAAA;AACzI,EAAA,OAAO,OAAO,KAAU,KAAA,QAAA,IAAY,QAAQ,KAAM,CAAA,WAAA,MAAiB,4CAAmB,MAAU,CAAA,GAAA,KAAA,CAAA;AACjG,CAAA;AAFgB,MAAA,CAAA,QAAA,EAAA,UAAA,CAAA","file":"isObject.cjs","sourcesContent":["import type { Constructor, NonNullObject } from './types';\n\n/**\n * Verify if the input is an object literal (or class).\n * @param input The object to verify\n * @param constructorType The type of the constructor of the object. Use this if you want a `class` of your choosing to pass the check as well.\n */\nexport function isObject(input: unknown, constructorType?: ObjectConstructor): input is NonNullObject;\nexport function isObject<T extends Constructor<unknown>>(input: unknown, constructorType: T): input is InstanceType<T>;\nexport function isObject<T extends Constructor<unknown> = ObjectConstructor>(input: unknown, constructorType?: T): input is NonNullObject {\n\treturn typeof input === 'object' && input ? input.constructor === (constructorType ?? Object) : false;\n}\n"]}