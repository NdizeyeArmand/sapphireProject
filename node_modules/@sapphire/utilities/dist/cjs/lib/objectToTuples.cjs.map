{"version":3,"sources":["../../../src/lib/objectToTuples.ts"],"names":["isObject"],"mappings":";;;;;;AAQO,SAAS,cAAA,CAAkB,GAAmB,EAAA,MAAA,GAAS,EAA6B,EAAA;AAC1F,EAAA,MAAM,UAAmC,EAAC,CAAA;AAE1C,EAAA,KAAA,MAAW,CAAC,GAAK,EAAA,KAAK,KAAK,MAAO,CAAA,OAAA,CAAQ,GAAG,CAAG,EAAA;AAC/C,IAAI,IAAAA,qBAAA,CAAS,KAAK,CAAG,EAAA;AACpB,MAAQ,OAAA,CAAA,IAAA,CAAK,GAAG,cAAe,CAAA,KAAA,EAAO,GAAG,MAAM,CAAA,EAAG,GAAG,CAAA,CAAA,CAAG,CAAC,CAAA,CAAA;AAAA,KACnD,MAAA;AACN,MAAQ,OAAA,CAAA,IAAA,CAAK,CAAC,CAAG,EAAA,MAAM,GAAG,GAAG,CAAA,CAAA,EAAe,KAAmB,CAAC,CAAA,CAAA;AAAA,KACjE;AAAA,GACD;AAEA,EAAO,OAAA,OAAA,CAAA;AACR,CAAA;AAZgB,MAAA,CAAA,cAAA,EAAA,gBAAA,CAAA","file":"objectToTuples.cjs","sourcesContent":["import { isObject } from './isObject';\nimport type { AnyObject } from './types';\n\n/**\n * Convert an object to a tuple\n * @param obj The object to convert\n * @param prefix The prefix for the key\n */\nexport function objectToTuples<T>(obj: AnyObject<T>, prefix = ''): [keyof T, T[keyof T]][] {\n\tconst entries: [keyof T, T[keyof T]][] = [];\n\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (isObject(value)) {\n\t\t\tentries.push(...objectToTuples(value, `${prefix}${key}.`));\n\t\t} else {\n\t\t\tentries.push([`${prefix}${key}` as keyof T, value as T[keyof T]]);\n\t\t}\n\t}\n\n\treturn entries;\n}\n"]}