{"version":3,"sources":["../../../../src/lib/strategies/env.ts"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAiB;AAE1B,SAAS,iBAAiB,MAAc;AACvC,SACC,QAAQ,SAAS,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,CAAC;AAAA,EACjD,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,CAAC;AAE/C;AALS;AAOT,SAAS,oBAAoB,MAAc;AAC1C,SAAO,sBAAsB,WAAY,QAAQ,iBAA8B,KAAK,CAAC,WAAW,OAAO,SAAS,IAAI,CAAC;AACtH;AAFS;AAIT,SAAS,iBAAiB,MAAc,OAAgB;AACvD,SAAO,QAAQ,QAAQ,IAAI,IAAI,MAAM,QAAQ,CAAC,UAAU,QAAQ,IAAI,IAAI,CAAC;AAC1E;AAFS;AAqBF,IAAM;AAAA;AAAA;AAAA,EAGZ,QAAQ,IAAI,YAAY,MAAM;AAAA;AAAA,EAG9B,SAAS,QAAQ;AAAA;AAAA;AAAA,EAIjB,OAAO,IAAI,2BAA2B,KAAK;AAAA,EAE3C,iBAAiB,aAAa;AAAA,EAE9B,CAAC,UAAU,QAAQ,IAAI,WAAW;AAAA;AAAA,EAGlC,iBAAiB,YAAY;AAAA;AAAA,EAG7B,iBAAiB,UAAU,MAAM,KACjC,iBAAiB,kBAAkB;AAAA;AAAA,EAGnC,iBAAiB,gBAAgB;AAAA;AAAA,EAGjC,oBAAoB,eAAe;AAAA,EACnC,oBAAoB,oBAAoB,KACxC,iBAAiB,eAAe;AAAA;AAAA,EAGhC,oBAAoB,KAAK;AAAA;AAAA,EAGzB,oBAAoB,kBAAkB;AAAA;AAAA,EAGtC,oBAAoB,KAAK;AAAA","sourcesContent":["import { isNullish } from '@sapphire/utilities';\n\nfunction checkProcessArgv(name: string) {\n\treturn (\n\t\tprocess.execArgv.some((arg) => arg.includes(name)) || //\n\t\tprocess.argv.some((arg) => arg.includes(name))\n\t);\n}\n\nfunction checkPreloadModules(name: string) {\n\treturn '_preload_modules' in process && (process._preload_modules as string[]).some((module) => module.includes(name));\n}\n\nfunction checkEnvVariable(name: string, value?: string) {\n\treturn value ? process.env[name] === value : !isNullish(process.env[name]);\n}\n\n/**\n * Whether or not the current environment can load TypeScript files. These\n * conditions are based on the most common tools and runtimes that support\n * loading TypeScript files directly.\n *\n * - {@linkplain https://www.npmjs.com/package/ts-node | `ts-node`}\n * - {@linkplain https://www.npmjs.com/package/ts-node-dev | `ts-node-dev`}\n * - {@linkplain https://www.npmjs.com/package/@babel/node | `@babel/node`}\n * - {@linkplain https://www.npmjs.com/package/vitest | `vitest`}\n * - {@linkplain https://www.npmjs.com/package/jest | `jest`}\n * - {@linkplain https://www.npmjs.com/package/@swc/cli | `swc`}\n * - {@linkplain https://www.npmjs.com/package/tsm | `tsm`}\n * - {@linkplain https://www.npmjs.com/package/esbuild | `esbuild`}\n * - {@linkplain https://www.npmjs.com/package/tsx | `tsx`}\n * - {@linkplain https://deno.com | `Deno`}\n * - {@linkplain https://bun.sh | `Bun`}\n */\nexport const CanLoadTypeScriptFiles: boolean =\n\t//\n\t// Deno\n\tReflect.has(globalThis, 'Deno') ||\n\t//\n\t// Bun\n\t'bun' in process.versions ||\n\t//\n\t// ts-node\n\t// > --require ts-node/register\n\tSymbol.for('ts-node.register.instance') in process ||\n\t// > --loader ts-node/esm\n\tcheckProcessArgv('ts-node/esm') ||\n\t// > ts-node-dev\n\t!isNullish(process.env.TS_NODE_DEV) ||\n\t//\n\t// @babel/node\n\tcheckProcessArgv('babel-node') ||\n\t//\n\t// vitest\n\tcheckEnvVariable('VITEST', 'true') ||\n\tcheckEnvVariable('VITEST_WORKER_ID') ||\n\t//\n\t// jest\n\tcheckEnvVariable('JEST_WORKER_ID') ||\n\t//\n\t// swc\n\tcheckPreloadModules('@swc/register') || //\n\tcheckPreloadModules('@swc-node/register') ||\n\tcheckProcessArgv('.bin/swc-node') ||\n\t//\n\t// tsm\n\tcheckPreloadModules('tsm') ||\n\t//\n\t// esbuild\n\tcheckPreloadModules('esbuild-register') ||\n\t//\n\t// tsx\n\tcheckPreloadModules('tsx');\n"]}